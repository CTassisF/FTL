name: Build and test

on:
  push:
    branches:
      - '**'
  pull_request:
  release:
    types: [published]

jobs:
  build:

    strategy:
      matrix:
        include:
         - arch: armv4t
           bin_name: pihole-FTL-armv4-linux-gnueabi
         - arch: armv5te
           bin_name: pihole-FTL-armv5-linux-gnueabi
         - arch: armv6hf
           bin_name:  pihole-FTL-armv6-linux-gnueabihf
         - arch: armv7hf
           bin_name: pihole-FTL-armv7-linux-gnueabihf
         - arch: armv8a
           bin_name: pihole-FTL-armv8-linux-gnueabihf
         - arch: aarch64
           bin_name: pihole-FTL-aarch64-linux-gnu
         - arch: x86_64
           bin_name: pihole-FTL-linux-x86_64
         - arch: x86_64-musl
           bin_name: pihole-FTL-musl-linux-x86_64
         - arch: x86_32
           bin_name: pihole-FTL-linux-x86_32

    container: pihole/ftl-build:v1.10-${{ matrix.arch }}

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      -
        name: Update git (until we update base image)
        if: ${{ matrix.arch != 'x86_64-musl' }}
        run: |
          echo "deb http://deb.debian.org/debian stretch-backports main contrib non-free" >> /etc/apt/sources.list;
          apt-get update
          apt-get -t stretch-backports install git -y
      -
        name: Get Branch/Tag Name
        id: branch_name
        run: |
          GIT_BRANCH=${GITHUB_REF#refs/*/}
          GIT_TAG=${{ github.event.release.tag_name }}
          echo ::set-output name=GIT_BRANCH::${GIT_BRANCH}
          echo ::set-output name=GIT_TAG::${GIT_TAG}
          echo ::set-output name=OUTPUT_DIR::${GIT_TAG:-${GIT_BRANCH}}
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: "Build"
        run: |
          bash .circleci/build-CI.sh "-DSTATIC=${STATIC}" "${{ steps.branch_name.outputs.GIT_BRANCH }}" "${{ steps.branch_name.outputs.GIT_TAG }}" "${{ matrix.arch }}"
      -
        name: "Binary checks"
        run: |
          export CIRCLE_JOB="${{ matrix.arch }}"
          bash test/arch_test.sh
      -
        name: "Tests"
        run: |
            export CIRCLE_JOB="${{ matrix.arch }}"
            test/run.sh
      -
        name: "Generate checksum file"
        run: |
          mv pihole-FTL "${{ matrix.bin_name }}"
          sha1sum pihole-FTL-* > ${{ matrix.bin_name }}.sha1
      -
        name: Attach binaries to release
        if: ${{ github.event_name == 'release' }}
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: '${{ matrix.bin_name }}*'
      -
        name: Transfer Builds to Pi-hole server for pihole checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "${{ matrix.bin_name }}*"
          target: "${{ steps.branch_name.outputs.OUTPUT_DIR }}"